#!/usr/bin/env bash
#test
nodeName=$1
#Check kubectl client exists
if ! command -v kubectl &> /dev/null
then
    printf "Kubectl client could not be found. Please install Kubectl client before running kubectl-exec.\nRefer to: https://kubernetes.io/docs/tasks/tools/\n\n"
    exit 1
fi

#Check client major/minor versions
kubectl_major_version=$(kubectl version --client -o yaml | grep -i "major" | awk '{ print $2 }' | sed 's/"//g')
kubectl_minor_version=$(kubectl version --client -o yaml | grep -i "minor" | awk '{ print $2 }' | sed 's/"//g')

if [[ $kubectl_major_version -gt 1 ]] || [[ $kubectl_major_version -eq 1 && $kubectl_minor_version -ge 18 ]]
then
        use_generator=false
        echo "Kuberetes client version is $kubectl_major_version.$kubectl_minor_version. Generator will not be used since it is deprecated."
elif [[ $kubectl_major_version -eq 1 && $kubectl_minor_version -lt 18 ]]
then
        use_generator=true
        echo "Kuberetes client version is $kubectl_major_version.$kubectl_minor_version. Generator will be used."
else
        echo "Invalid kubectl version, exiting."
        exit 1
fi
fqdn=$(kubectl cluster-info | grep -i -o -P '(?<=https://).*(?=:443)' | head -1)
cat << EOF > ./ds.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    component: disable-node-exporter-service
  name: node-logs-exporter
  namespace: kube-system
spec:
  selector:
    matchLabels:
      component: disable-node-exporter-service
      tier: node
  template:
    metadata:
      labels:
        component: disable-node-exporter-service
        tier: node
    spec:
      nodeName: $nodeName
      containers:
        - command:
            - nsenter
            - --target
            - "1"
            - --mount
            - --uts
            - --ipc
            - --net
            - --pid
            - --
            - sh
            - -c
            - |
              mkdir /tmp/journal
              cp -r /var/log/journal/* /tmp/journal/
              tar -cvzf /tmp/akslogs.tgz /tmp/journal /var/log/azure-vnet* /etc/kubernetes/certs /etc/kubernetes/azure.json
              sleep 600
          image: alpine
          imagePullPolicy: IfNotPresent
          name: disable-node-exporter-service
          resources:
            requests:
              cpu: 10m
          securityContext:
            privileged: true
      hostPID: true
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          operator: Exists
      restartPolicy: Always
  updateStrategy:
    type: OnDelete
EOF

sleep 5
kubectl create -f ./ds.yaml
echo "Done Creating DaemonSet"
podName=$(kubectl get pod -n kube-system | grep node-logs-exporter | cut -d ' ' -f1|tr '\n' ' ' |  rev | cut -c 2- | rev)
echo  "kubectl cp kube-system/$podName:/tmp/akslogs.tgz ./akslogs.tgz" > ./copy
chmod +x ./copy
echo "Getting Archive"
./copy
rm ./ds.yaml
rm ./copy
echo Done
